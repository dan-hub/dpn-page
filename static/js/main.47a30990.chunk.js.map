{"version":3,"sources":["App.js","index.js"],"names":["GloabalStyle","createGlobalStyle","AnimationContainer","styled","div","AnimatedTitle","TitleFragment","size","breakText","offset","App","useState","currentText","setCurrentText","pageStatus","setPageStatus","setBreakText","startScrollAnimations","setStartScrollAnimations","useEffect","anime","timeline","easing","add","targets","keyframes","opacity","duration","changeComplete","strokeDashoffset","setDashoffset","delay","direction","rotate","translateX","scale","body","document","querySelector","style","overflow","backgroundColor","easeing","translateY","Fragment","className","width","height","xmlns","stroke","d","fill-opacity","stroke-opacity","stroke-width","fill","triggerHook","reverse","indicators","globalSceneOptions","pin","a","b","c","display","flexDirection","justifyContent","class","marginLeft","color","id","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.47a30990.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport anime from 'animejs/lib/anime.es.js'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport { Controller, Scene } from 'react-scrollmagic'\n\nconst GloabalStyle = createGlobalStyle`\n  body {\n    overflow: hidden;\n    margin: 0;\n  }\n`\n\nconst App = () => {\n  // Text showed on initial animations\n  const [currentText, setCurrentText] = useState('Just another portifolio')\n  const [pageStatus, setPageStatus] = useState('start-animation')\n  const [breakText, setBreakText] = useState(true)\n  const [startScrollAnimations, setStartScrollAnimations] = useState(false)\n\n  // Execute start timeline\n  useEffect(() => {\n    if (pageStatus === 'start-animation') {\n      const timeline = anime.timeline({\n        easing: 'linear',\n      })\n      timeline\n        .add({\n          targets: '.animation-container h1',\n          keyframes: [{ opacity: 0 }, { opacity: 1 }, { opacity: 1 }, { opacity: 0 }],\n          duration: 4000,\n          changeComplete: function() {\n            setCurrentText('But with a lot of animations')\n          },\n        })\n        .add({\n          targets: '.animation-container h1',\n          keyframes: [{ opacity: 0 }, { opacity: 1 }, { opacity: 1 }, { opacity: 0 }],\n          duration: 4000,\n          changeComplete: function() {\n            setCurrentText('')\n          },\n        })\n        .add({\n          targets: '.animation-container path',\n          strokeDashoffset: [anime.setDashoffset, 0],\n          easing: 'cubicBezier(.1,.69,.93,.65)',\n          duration: 4000,\n          delay: 1000,\n          direction: 'alternate',\n        })\n        .add({\n          targets: 'path',\n          opacity: 1,\n          duration: 1,\n        })\n        .add({\n          targets: '.animation-container',\n          duration: 1500,\n          rotate: 77,\n          translateX: -200,\n          scale: 50,\n          changeComplete: () => {\n            //Restore scroll possibility\n            const body = document.querySelector('body')\n            body.style.overflow = 'auto'\n            body.style.backgroundColor = 'black'\n            setPageStatus('content')\n          },\n        })\n    }\n    if (pageStatus === 'content') {\n      const contentTimeline = anime.timeline({\n        easeing: 'linear',\n      })\n\n      contentTimeline.add({\n        targets: 'h1',\n        delay: 1500,\n        translateY: [20, 0],\n        opacity: [0, 1],\n        duration: 3000,\n      })\n    }\n  }, [pageStatus])\n\n  return (\n    <React.Fragment>\n      <GloabalStyle />\n      {pageStatus === 'start-animation' ? (\n        <AnimationContainer className='animation-container'>\n          <h1>{currentText}</h1>\n          <svg width='799.9999999999999' height='600' xmlns='http://www.w3.org/2000/svg'>\n            <path\n              stroke='black'\n              d='m411.563668,116.628393l-0.97417,307.38946c-153.89595,0.3316 -150.75319,-152.67257 2.13913,-152.49492c152.89232,0.17765 161.805001,-132.85821 7.752241,-134.02089'\n              opacity='1'\n              fill-opacity='null'\n              stroke-opacity='null'\n              stroke-width='42'\n              fill='none'\n            />\n          </svg>\n        </AnimationContainer>\n      ) : (\n        <div>\n          <Controller>\n            <Scene\n              offset={1}\n              triggerHook='onLeave'\n              reverse={true}\n              indicators\n              globalSceneOptions={{ triggerHook: 'onEnter' }}\n              duration={0}\n              pin\n            >\n              {(a, b, c) => {\n                setBreakText(!a)\n                return <div />\n              }}\n            </Scene>\n          </Controller>\n\n          <div>\n            <div style={{ display: 'flex', flexDirection: 'column', height: '100vh', justifyContent: 'center' }}>\n              <AnimatedTitle>\n                <TitleFragment breakText={breakText && '0'} size={70} offset={0} class='column-1'>\n                  <h1>DANIEL</h1>\n                </TitleFragment>\n                <TitleFragment breakText={breakText && '30vw'} size={140} offset={70} class='column-3'>\n                  <h1>DANIEL</h1>\n                </TitleFragment>\n                <TitleFragment breakText={breakText && '70vw'} size={300} offset={140 + 70} class='column-4'>\n                  <h1>DANIEL</h1>\n                </TitleFragment>\n              </AnimatedTitle>\n              <AnimatedTitle style={{ marginLeft: 100 }}>\n                <TitleFragment breakText={breakText && '0'} size={70} offset={0} class='column-1'>\n                  <h1>PORTO</h1>\n                </TitleFragment>\n                <TitleFragment breakText={breakText && '15vw'} size={140} offset={70} class='column-3'>\n                  <h1>PORTO</h1>\n                </TitleFragment>\n                <TitleFragment breakText={breakText && '45vw'} size={300} offset={140 + 70} class='column-4'>\n                  <h1>PORTO</h1>\n                </TitleFragment>\n              </AnimatedTitle>\n              <AnimatedTitle>\n                <TitleFragment breakText={breakText && '0'} size={150} offset={0} class='column-1'>\n                  <h1>NUNEZ</h1>\n                </TitleFragment>\n                <TitleFragment breakText={breakText && '24vw'} size={55} offset={150} class='column-3'>\n                  <h1>NUNEZ</h1>\n                </TitleFragment>\n                <TitleFragment breakText={breakText && '44vw'} size={300} offset={150 + 55} class='column-4'>\n                  <h1>NUNEZ</h1>\n                </TitleFragment>\n              </AnimatedTitle>\n            </div>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <Controller>\n              <Scene\n                offset={300}\n                triggerHook='onEnter'\n                reverse={true}\n                indicators\n                globalSceneOptions={{ triggerHook: 'onEnter' }}\n                duration={0}\n                pin\n              >\n                {(a, b, c) => {\n                  if (a) {\n                    anime({\n                      targets: '#teste-scroll',\n                      translateX: [200, 0],\n                      opacity: [0, 1],\n                    })\n                    setStartScrollAnimations(true)\n                  } else if (startScrollAnimations) {\n                    anime({\n                      targets: '#teste-scroll',\n                      translateX: [0, 200],\n                      opacity: [1, 0],\n                    })\n                  }\n                  return <div />\n                }}\n              </Scene>\n            </Controller>\n            <div id='teste-scroll' style={{ height: 300, width: 20, backgroundColor: 'orange', opacity: 0 }} />\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n            <h1 style={{ opacity: 0, color: 'white' }}>a</h1>\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  )\n}\n\nconst AnimationContainer = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: 100vw;\n  height: 100vh;\n  background-color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n  color: black;\n  h1 {\n    opacity: 0;\n  }\n  > * {\n    margin: auto;\n    position: absolute;\n  }\n`\n\nconst AnimatedTitle = styled.div`\n  display: flex;\n  width: 100%;\n  height: 170px;\n`\n\nconst TitleFragment = styled.div`\n  transition: transform 1s ease-in-out;\n  overflow: hidden;\n  position: relative;\n  width: ${({ size }) => size}px;\n  color: white;\n  font-size: 70px;\n  font-family: Arial, Helvetica, sans-serif;\n  ${({ breakText }) =>\n    breakText\n      ? `\n    transform: translateX(${breakText});\n  `\n      : ''}\n  h1 {\n    left: ${({ offset }) => -offset}px;\n    position: absolute;\n    font-family: 'Roboto';\n    font-weight: 900;\n    margin: 0;\n  }\n`\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}